---
title: "4.6 Dolphins 4"
format: html
execute:
  echo: false
  warning: true
  error: true
  cache: false
  result: 'show'
code-fold: true
---

## Dolphins 4 right

```{r setup, include=FALSE}
library(reticulate)
use_virtualenv("r-reticulate", required = FALSE)
```

### R figure
```{r}
library(reticulate)

x <- c(0,0,0,0,100,500)
y <- c(0,100,200,400,500,500)

h <- 500 
w <- 500 

grid.step <- 100


plot( c(0,w), c(0,h),  
     xaxs = "i",yaxs = "i",
     xaxt = 'n', yaxt = 'n',
     type = "n",
     xlab = "Negatives", ylab = "Positives")
     
axis(2,y,labels=c('','p3','p5','p1-2','p4',''))
axis(1,x,labels=c('','','','','n5','n1-4'))

gx <- grid.step
while (gx <= w) {
  abline(v = gx, col="gray", lty="dotted")
  gx <- gx + grid.step
}
gy <- grid.step
while (gy <= h) {
  abline(h = gy, col="gray", lty="dotted")
  gy <- gy + grid.step
}

text( x[2]+20, y[2], "A")
text( x[3]+20, y[3], "B")
text( x[4]+15, y[4]-15, "C")
text( x[5]+15, y[5]-15, "D,E")
text( x[6]-10, y[6]-15, "F")

lines( x, y, lwd=5, type='o')

```

### Python figure

```{python,  fig.show='hold'}

import matplotlib.pyplot as plt
import numpy as np

x = [0, 0, 0, 0, 100, 500]
y = [0, 100, 200, 400, 500, 500]

h = 500
w = 500
grid_step = 100

fig, ax = plt.subplots()
ax.set_xlim(0, w)
ax.set_ylim(0, h)
ax.set_xticks(x)
ax.set_xticklabels(['', '', '', '', 'n5', 'n1-4'])
ax.set_yticks(y)
ax.set_yticklabels(['', 'p3', 'p5', 'p1-2', 'p4', ''])

for gx in range(grid_step, w + 1, grid_step):
    ax.axvline(x=gx, color='gray', linestyle='dotted')
for gy in range(grid_step, h + 1, grid_step):
    ax.axhline(y=gy, color='gray', linestyle='dotted')

ax.text(x[1]+20, y[1], "A")
ax.text(x[2]+20, y[2], "B")
ax.text(x[3]+15, y[3]-15, "C")
ax.text(x[4]+15, y[4]-15, "D,E")
ax.text(x[5]-10, y[5]-15, "F")

ax.plot(x, y, linewidth=5, marker='o')
ax.set_xlabel("Negatives")
ax.set_ylabel("Positives")
plt.show()


```

## Path left

```{mermaid}

graph TD;
    1["A: Length=3 & Gills=no & Beak=yes & Teeth=few"]:::filled
    2["B: Length=[3,5] & Gills=no & Beak=yes & Teeth=few"]
    10["C: Length=[3,5] & Gills=no & Beak=yes"]
    13["D: Gills=no & Beak=yes"]
    15["E: Gills=no"]
    16["F: true"]

    2 --> 1
    10 --> 2
    13 --> 10
    15 --> 13
    16 --> 15

    classDef filled fill:#f0f0f0,stroke:#000,stroke-width:1px;

```