---
title: "8.18 Random Dendogram"
engine: jupyter
execute: 
    echo: true
code-fold: true
---

```{python}

#| echo: false

import numpy as np
import matplotlib.pyplot as plt
from scipy.spatial.distance import pdist
from scipy.cluster.hierarchy import linkage, dendrogram, cophenet
from scipy.stats import spearmanr
from sklearn.cluster import AgglomerativeClustering
from sklearn.metrics import silhouette_samples

filename = 'randomdendrogram'
D = np.random.rand(20, 2)  

methods = ['complete']  
f = 1 


for method in methods:
    
    plt.figure(f)
    f += 1
    L = linkage(D, method)
    
    
    PD = pdist(D)
    c, d = cophenet(L, PD)
    r, _ = spearmanr(PD, d)
    print(f'Spearman correlation for {method}: {r}')

    dendrogram(L, color_threshold='default')
    plt.title(f'{filename}-middle')
    plt.show()

    plt.figure(f)
    f += 1
    clustering = AgglomerativeClustering(n_clusters=3, linkage=method)
    T = clustering.fit_predict(D)
    
    plt.scatter(D[:, 0], D[:, 1], s=20, c=T, cmap='coolwarm', marker='o')
    d = 0.01
    for i in range(D.shape[0]):
        plt.text(D[i, 0] + d, D[i, 1] + d, str(i + 1), fontsize=12)
    plt.title(f'{filename}-left')
    plt.axis([0, 1, 0, 1])
    plt.gca().set_box_aspect(1)
    plt.show()

    plt.figure(f)
    f += 1
    silhouette_vals = silhouette_samples(D, T, metric='euclidean')
    plt.bar(range(D.shape[0]), silhouette_vals)
    plt.title(f'{filename}-right')
    plt.show()


```